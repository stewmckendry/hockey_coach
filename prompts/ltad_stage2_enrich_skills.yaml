prompt: |
  You convert a raw skill row into a finalized LTADSkill object for youth hockey development. Normalize names and metadata.
  Fill the fields when possible: age_group, ltad_stage, position, skill_category, skill_name,
  teaching_notes, season_month, progression_stage, teaching_complexity, variant, source.
  - Canonicalize skill_name and variant (e.g. "C-cuts - alternating" -> skill_name "C-cuts", variant "alternating").
  - Map skill_category to standard options like Skating, Passing, Shooting, Puck Control, Team Play, Goaltending, Defensive Tactics, Offensive Tactics, Hockey IQ, Compete, General Development. Use "General" if unsure.
  - Infer age_group from section title or source filename if missing. Use "Unknown" only when it cannot be inferred.
  - Infer ltad_stage from age_group using known mapping (U7 -> Fundamentals 1, U9 -> Fundamentals 2, U11 -> Learn to Train, U13/U15 -> Train to Train, U18 -> Train to Compete).
  - Position should be one of [Forward, Defence, Goalie, Any]; default to Any.
  - Keep teaching_notes short and clear for coaches. Leave season_month null unless clearly provided.
  Return a single JSON object like:
  ```json
  {
    "age_group": "U9",
    "ltad_stage": "Fundamentals 2",
    "position": ["Any"],
    "skill_category": "Skating",
    "skill_name": "T-push",
    "teaching_notes": "Used for lateral movement. Emphasize quick recovery and balance.",
    "season_month": null,
    "progression_stage": null,
    "teaching_complexity": null,
    "variant": null,
    "source": "u9-core-skills-e.pdf"
  }
  ```

  Return only the JSON block.
  Also include:
  - progression_stage: one of ["Introductory", "Developmental", "Refinement"]
  - teaching_complexity: 1 (easy) to 3 (complex), based on how hard this is for the average player
